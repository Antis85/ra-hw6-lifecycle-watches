{"version":3,"sources":["components/AddClockForm.js","components/DigitalClockClass.js","components/ClockPanel.js","App.js","index.js"],"names":["AddClockForm","props","form","onChange","onSubmit","className","htmlFor","id","name","value","type","required","placeholder","timezone","min","max","DigitalClockClass","initDate","Date","getTimezoneHours","getUTCHours","Number","getHours","state","sec","getSeconds","getMinutes","hour","clock","changeState","setState","prevState","date","currentHours","this","timeout","setTimeout","interval","setInterval","getMilliseconds","clearInterval","clearTimeout","city","onRemove","onClick","Component","ClockPanel","initArray","initForm","useState","array","setArray","setForm","handleRemove","itemId","prevArray","filter","item","clockList","map","target","prevForm","evt","preventDefault","find","exist","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9dd00502.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddClockForm(props) {\n  const { form, onChange, onSubmit } = props;\n\n  return (\n    <form className=\"AddClockForm\" onSubmit={onSubmit}>\n      <div className=\"AddClockForm-inputs-wrapper\">\n        <div className=\"AddClockForm-input-wrapper city-wrapper\">\n          <label className=\"AddClockForm-label label-city\" htmlFor=\"city\">\n            Название\n          </label>\n          <input\n            className=\"AddClockForm-input input-city\"\n            id=\"city\"\n            name=\"city\"\n            value={form.id}\n            type=\"text\"\n            required\n            placeholder=\"Например, Москва...\"\n            onChange={onChange}\n          />\n        </div>\n\n        <div className=\"AddClockForm-input-wrapper timezone-wrapper\">\n          <label\n            className=\"AddClockForm-label label-timezone\"\n            htmlFor=\"timezone\"\n          >\n            Временная зона\n          </label>\n          <input\n            className=\"AddClockForm-input input-timezone\"\n            id=\"timezone\"\n            name=\"timezone\"\n            value={form.timezone}\n            type=\"number\"\n            min=\"-12\"\n            max=\"12\"\n            required\n            placeholder=\"От -12 до 12...\"\n            onChange={onChange}\n          />\n        </div>\n\n        <button className=\"AddClockForm-submit\" type=\"submit\">\n          Добавить\n        </button>\n      </div>\n    </form>\n  );\n}\n\nAddClockForm.propTypes = {\n  form: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    timezone: PropTypes.string.isRequired,\n  }).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class DigitalClockClass extends Component {\n  initDate = new Date();\n\n  getTimezoneHours = (initDate, timezone) => {\n    return (\n      (timezone && (initDate.getUTCHours() + Number(timezone)) % 24) ||\n      initDate.getHours()\n    );\n  };\n\n  state = {\n    sec: this.initDate.getSeconds(),\n    min: this.initDate.getMinutes(),\n    hour: this.getTimezoneHours(this.initDate, this.props.clock.timezone),\n  };\n\n  changeState = () => {\n    this.setState((prevState) => {\n      const date = new Date();\n      const { sec, min, hour } = prevState;\n      if (sec !== date.getSeconds()) return { sec: date.getSeconds() };\n      if (min !== date.getMinutes()) return { min: date.getMinutes() };\n      const currentHours = this.getTimezoneHours(\n        date,\n        this.props.clock.timezone\n      );\n      if (hour !== currentHours) return { hour: currentHours };\n    });\n  };\n\n  componentDidMount() {\n    this.timeout = setTimeout(() => {\n      this.interval = setInterval(() => {\n        this.changeState();\n      }, 1000);\n      this.changeState();\n    }, 1000 - new Date().getMilliseconds());\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearTimeout(this.timeout);\n  }\n\n  render() {\n    const {\n      clock: { id, city },\n      onRemove,\n    } = this.props;\n    const { sec, min, hour } = this.state;\n    return (\n      <article className=\"Clock-widget\">\n        <h1>{city || 'Местное время'}</h1>\n\n        <div className=\"Clock-digital\">\n          {hour < 10 ? '0' : null}\n          {hour}:{min < 10 ? '0' : null}\n          {min}:{sec < 10 ? '0' : null}\n          {sec}\n        </div>\n\n        <button\n          onClick={() => onRemove(id)}\n          className=\"Clock-button button-remove\"\n        >\n          &#10008;\n        </button>\n      </article>\n    );\n  }\n}\n\nDigitalClockClass.propTypes = {\n  clock: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    timezone: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport AddClockForm from './AddClockForm';\nimport DigitalClockClass from './DigitalClockClass';\n\nexport default function ClockPanel(props) {\n  const { initArray, initForm } = props;\n  const [array, setArray] = useState(initArray);\n  const [form, setForm] = useState(initForm);\n\n  const handleChange = ({ target }) => {\n    setForm((prevForm) =>\n      target.name === 'city'\n        ? { ...prevForm, id: target.value, city: target.value }\n        : { ...prevForm, timezone: target.value }\n    );\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setArray((prevArray) => {\n      const existClock = prevArray.find((exist) => exist.id === form.id);\n      if (existClock) return [...prevArray];\n      const newArray = [...prevArray, form];\n      return newArray;\n    });\n\n    setForm({\n      id: '',\n      city: '',\n      timezone: '',\n    });\n  };\n\n  const handleRemove = (itemId) => {\n    setArray((prevArray) => prevArray.filter((item) => item.id !== itemId));\n  };\n\n  const clockList = array.map((item) => (\n    <DigitalClockClass key={item.id} clock={item} onRemove={handleRemove} />\n  ));\n\n  return (\n    <>\n      <AddClockForm\n        form={form}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <section className=\"Clockes-body\">{clockList}</section>\n    </>\n  );\n}\n\nClockPanel.propTypes = {\n  initArray: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      city: PropTypes.string.isRequired,\n      timezone: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  initForm: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    timezone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import './App.css';\nimport ClockPanel from './components/ClockPanel';\n\nexport default function App() {\n  const form = {\n    id: '',\n    city: '',\n    timezone: '',\n  };\n  const array = [{ ...form }];\n  return (\n    <div className=\"App\">\n      <ClockPanel className=\"ClockPanel\" initArray={array} initForm={form} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}